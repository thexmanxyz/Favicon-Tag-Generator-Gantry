{#######################################################}
{#                                                     #}
{#   Favicon Tag Generator - Extension for Gantry      #}
{#                                                     #}
{#   Purpose: This project improves the Favicon as     #}
{#            well as the Touch Icon Tag Generation    #}
{#            and Configuration within the Gantry      #}
{#            templating framework.                    #}
{#                                                     #}
{#   Author: Andreas Kar (thex) <andreas.kar@gmx.at>   #}
{#                                                     #}
{#######################################################}

{% extends '@nucleus/partials/particle.html.twig' %}

{% set general = particle.general %}
{%- block head -%}
    {{ parent() }}
    {%- if general.mode != 'custom' -%}
    {{ _self.renderLinkTagMode(general, particle.icon, "image/x-icon", "","") }}
    {{ _self.renderLinkTagMode(general, particle.icon57, "57", "", "") }}
    {{ _self.renderLinkTagMode(general, particle.icon60, "60", "", "") }}
    {{ _self.renderLinkTagMode(general, particle.icon72, "72", "", "") }}
    {{ _self.renderLinkTagMode(general, particle.icon76, "76", "", "") }}
    {{ _self.renderLinkTagMode(general, particle.icon114, "114", "", "") }}
    {{ _self.renderLinkTagMode(general, particle.icon120, "120", "", "") }}
    {{ _self.renderLinkTagMode(general, particle.icon144, "144", "", "") }}
    {{ _self.renderLinkTagMode(general, particle.icon152, "152", "", "") }}
    {{ _self.renderLinkTagMode(general, particle.icon180, "180", "", "") }}
    {{ _self.renderLinkTagMode(general, particle.icon16, "16", "image/png", "") }}
    {{ _self.renderLinkTagMode(general, particle.icon32, "32", "image/png", "") }}
    {{ _self.renderLinkTagMode(general, particle.icon36, "36", "image/png", "") }}
    {{ _self.renderLinkTagMode(general, particle.icon48, "48", "image/png", "") }}
    {{ _self.renderLinkTagMode(general, particle.icon96, "96", "image/png", "") }}
    {{ _self.renderLinkTagMode(general, particle.icon128, "128", "image/png", "") }}
    {{ _self.renderLinkTagMode(general, particle.icon192, "192", "image/png", "") }}
    {{ _self.renderLinkTagMode(general, particle.icon196, "196", "image/png", "") }}
    {{ _self.renderLinkTagMode(general, particle.manifest, "", "", "manifest") }}
    {{ _self.renderMetaTagMode(general, particle.icon144tile, "144", "msapplication-TileImage", 0) }}
    {{ _self.renderMetaTagMode(general, particle.icon70square, "70", "msapplication-square70x70logo", 0) -}}
    {{ _self.renderMetaTagMode(general, particle.icon150square, "150", "msapplication-square150x150logo", 0) }}
    {{ _self.renderMetaTagMode(general, particle.icon310square, "310", "msapplication-square310x310logo", 0) }}
    {{ _self.renderMetaTag(general, particle.tilecolor, particle.tilecolor.color, "msapplication-TileColor", 1) }}
    {{ _self.renderMetaTag(general, particle.themecolor, particle.themecolor.color, "theme-color", 1) }}
    {%- endif -%}
    
    {%- for cTag in particle.custom.tags -%}
    {{ _self.renderLinkTag(cTag.enabled, cTag.rel, cTag.type, cTag.sizes, cTag.image) }}
    {%- endfor -%}
{%- endblock -%}

{%- macro renderLinkTagMode(general, icon, size, type, fileId) -%}
    {%- import _self as SELF -%}
    {%- set sizes = (size is not empty) ? size ~ 'x' ~ size : '' -%}
    {%- if icon.enabled -%}
        {%- set href = general.base_path ~ ((general.base_path ends with '/') ? '' : '/') ~ ((fileId is not empty) ? fileId : general.file_id) -%}
        {%- if fileId != 'manifest' -%}
            {%- set href = href ~ ((size is not empty) ? '-' ~ size ~ '.png' : '.ico') -%}
            {%- set hrefC = icon.image -%}
        {%- else -%}
            {%- set href = href ~ ".webmanifest" -%}
            {%- set hrefC = icon.path -%}
        {%- endif -%}
        {%- if general.mode == 'manual' or (general.mode == 'semi-auto' and hrefC is not empty) -%}
            {%- set href = hrefC -%}
        {%- endif -%}
        {%- if href is not empty -%}
            {{ SELF.renderLinkTag(icon.enabled, icon.rel, type, sizes, href, general.apple_sizes) }}
        {%- endif -%}
    {%- endif -%}
{%- endmacro -%}

{%- macro renderMetaTagMode(general, icon, content, name, flag) -%}
    {%- import _self as SELF -%}
    {%- if flag == 0 -%}
        {%- set base = general.base_path ~ ((general.base_path ends with '/') ? '' : '/') ~ general.file_id -%}
        {%- set link = base ~ '-' ~ content ~ '.png' -%}
        {%- if general.mode == 'manual' or (general.mode == 'semi-auto' and icon.image is not empty) -%}
            {%- set link = icon.image -%}
        {%- endif -%}
        {{- SELF.renderMetaTag(icon.enabled, name, link) -}}
    {%- else -%}
        {{- SELF.renderMetaTag(icon.enabled, name, content) -}}
    {%- endif -%}
{%- endmacro -%}

{%- macro renderLinkTag(enabled, rel, type, sizes, href, appleSizes) -%}
    {%- if enabled -%}
        {%- set linkTag = '<link rel="' ~ rel|e ~ '"' -%}
        {%- if type is not empty -%}
            {%- set linkTag = linkTag ~ ' type="' ~ type|e ~ '"' -%}
        {%- endif -%}
        {%- if sizes is not empty and ((rel == 'icon') or (rel starts with 'apple-touch' and appleSizes)) -%}
            {%- set linkTag = linkTag ~ ' sizes="' ~ sizes|e ~ '"' -%}
        {%- endif -%}
        {%- if href is not empty -%}
            {%- set linkTag = linkTag ~ ' href="' ~ url(href) ~ '"' -%}
        {%- endif -%}
        {%- set linkTag = linkTag ~ '>' -%}
        {{- linkTag|raw -}}
    {% endif %}
{%- endmacro -%}

{%- macro renderMetaTag(enabled, name, content) -%}
    {%- if enabled -%}
        {%- set linkTag = '<meta name="' ~ name|e ~ '"' -%}
        {%- if content is not empty -%}
            {%- set linkTag = linkTag ~ ' content="' ~ content|e ~ '"' -%}
        {%- endif -%}
        {%- set linkTag = linkTag ~ '>' -%}
        {{- linkTag|raw -}}
    {% endif %}
{%- endmacro -%}